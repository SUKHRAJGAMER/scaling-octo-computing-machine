name: VPS Auto Restart (IPv4 Safe, High Reliability)

on:
  schedule:
    - cron: '0 */5 * * *' # every 5 hours
  workflow_dispatch: {}

jobs:
  restart-vps:
    runs-on: ubuntu-latest

    steps:
      - name: üîë Prepare SSH key and known_hosts (IPv4)
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -4 -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: üöÄ Run backup + service restart on VPS (IPv4)
        env:
          REMOTE_BACKUP_DIR: ${{ secrets.REMOTE_BACKUP_DIR }}
          REMOTE_PATHS: ${{ secrets.REMOTE_PATHS }}
          SERVICES: ${{ secrets.SERVICES }}
          KEEP_BACKUPS: ${{ secrets.KEEP_BACKUPS }}
        run: |
          set -euo pipefail
          PORT="${{ secrets.SSH_PORT }}"
          HOST="${{ secrets.SSH_HOST }}"
          USER="${{ secrets.SSH_USER }}"
          TARGET="$USER@$HOST"

          echo "[ACTION] Connecting to $TARGET (IPv4 enforced) on port $PORT"

          ssh -4 -i ~/.ssh/id_rsa -p "$PORT" -o StrictHostKeyChecking=yes "$TARGET" 'bash -s' <<'REMOTE_SCRIPT'
set -euo pipefail

TIMESTAMP=$(date -u +"%Y%m%dT%H%M%SZ")
BACKUP_DIR="${REMOTE_BACKUP_DIR:-/var/backups/github_maintenance}"
PATHS="${REMOTE_PATHS:-/etc /var/www}"
KEEP="${KEEP_BACKUPS:-7}"
SRV="${SERVICES:-nginx.service}"

echo "[REMOTE] === VPS Maintenance Started @ $TIMESTAMP ==="

# Ensure backup directory
mkdir -p "$BACKUP_DIR"

# Create backup
TARFILE="$BACKUP_DIR/backup-$TIMESTAMP.tar.gz"
echo "[REMOTE] Creating backup: $TARFILE"
tar -czf "$TARFILE" $PATHS 2>/dev/null || echo "[WARN] Some files missing in backup"

# Rotate backups
echo "[REMOTE] Rotating backups (keeping last $KEEP)"
ls -1t "$BACKUP_DIR"/backup-*.tar.gz 2>/dev/null | sed -n "$((KEEP+1)),\$p" | xargs -r rm --

# Restart services
for svc in $SRV; do
  echo "[REMOTE] Processing service: $svc"
  if systemctl is-active --quiet "$svc"; then
    echo "[REMOTE] Restarting $svc..."
    systemctl restart "$svc"
  else
    echo "[REMOTE] Starting $svc..."
    systemctl start "$svc"
  fi

  if systemctl is-active --quiet "$svc"; then
    echo "[REMOTE] ‚úÖ $svc is active"
  else
    echo "[REMOTE] ‚ùå $svc failed to start" && exit 2
  fi
done

# Show current IPv4 (just for confirmation)
IPV4=$(ip -4 addr show | grep -oP "(?<=inet\\s)\\d+(\\.\\d+){3}" | head -n1 || echo "unknown")
echo "[REMOTE] Current IPv4: $IPV4"

echo "[REMOTE] === VPS Maintenance Finished @ $TIMESTAMP ==="
REMOTE_SCRIPT
