name: Persistent Local VPS

on:
  workflow_dispatch:   # manual start only

jobs:
  vps-session:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install prerequisites
        run: |
          sudo apt update
          sudo apt install -y curl unzip sudo net-tools neofetch mariadb-server rsync zip

      # Install Tailscale
      - name: Install Tailscale
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh

      # Download last backup (if available)
      - name: Download last backup
        uses: actions/download-artifact@v4
        with:
          name: vps-backup
          path: ./backup
        continue-on-error: true

      # Restore backup files
      - name: Restore backup files
        run: |
          if [ -f ./backup/full-backup.zip ]; then
            echo "üìÇ Extracting backup..."
            sudo unzip -o ./backup/full-backup.zip -d /
            echo "‚úÖ Backup restored"
          else
            echo "‚ö†Ô∏è No backup found, starting fresh"
          fi

      # Restore Tailscale state (for stable IP)
      - name: Restore Tailscale state
        run: |
          sudo mkdir -p /var/lib/tailscale
          if [ -f ./backup/vps-backup/tailscaled.state ]; then
            echo "üìÇ Restoring previous Tailscale state"
            sudo cp ./backup/vps-backup/tailscaled.state /var/lib/tailscale/tailscaled.state
          fi
          sudo chmod 600 /var/lib/tailscale/tailscaled.state || true

      # Start VPS loop
      - name: Run persistent VPS loop
        run: |
          set -e
          sudo tailscaled &
          sleep 5
          sudo tailscale up \
            --authkey ${{ secrets.TAILSCALE_AUTHKEY }} \
            --ssh \
            --hostname=biralo

          echo "‚úÖ Tailscale started"
          echo "üîó Initial IP: $(tailscale ip -4)"

          # Infinite loop: run ‚Üí backup ‚Üí restore ‚Üí compare ‚Üí restart
          while true; do
            echo "‚è≥ VPS running..."
            BEFORE=$(tailscale ip -4)
            echo "üìã Before IP: $BEFORE"

            # Simulate "uptime" (5 minutes session)
            sleep 300

            # Backup before "restart"
            echo "üì¶ Creating backup..."
            sudo mkdir -p ./vps-backup
            sudo cp /var/lib/tailscale/tailscaled.state ./vps-backup/ || true
            sudo rsync -a /var/www/pterodactyl ./vps-backup/ || true
            sudo rsync -a /etc/pterodactyl ./vps-backup/ || true
            sudo rsync -a /var/lib/pterodactyl ./vps-backup/ || true
            sudo systemctl stop mariadb || true
            sudo rsync -a /var/lib/mysql ./vps-backup/mysql || true
            sudo systemctl start mariadb || true
            sudo zip -r full-backup.zip ./vps-backup
            sudo chown $USER:$USER full-backup.zip
            echo "‚úÖ Backup complete"

            # Upload backup
            echo "‚¨ÜÔ∏è Uploading backup..."
            curl \
              -H "authorization: Bearer $ACTIONS_RUNTIME_TOKEN" \
              -H "content-type: application/json" \
              -H "accept: application/json;api-version=6.0-preview" \
              -F "file=@full-backup.zip" \
              "$ACTIONS_RUNTIME_URL/_apis/pipelines/workflows/$GITHUB_RUN_ID/artifacts?artifactName=vps-backup&api-version=6.0-preview"

            # "Restart" simulation
            AFTER=$(tailscale ip -4)
            echo "üìã After IP: $AFTER"

            if [ "$BEFORE" = "$AFTER" ]; then
              echo "‚úÖ Yes, same IP"
            else
              echo "‚ùå No, IP changed"
            fi

            echo "üîÑ Restarting VPS loop again..."
          done
