name: VPS Auto Restart (IPv4 Safe)

on:
  schedule:
    - cron: '0 */5 * * *'   # every 5 hours
  workflow_dispatch: {}

jobs:
  restart-vps:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“‚ Checkout repository
        uses: actions/checkout@v4

      - name: ðŸš€ Run maintenance script on VPS (IPv4 only)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST || '127.0.0.1' }}   # ðŸ‘ˆ fallback if missing
          username: ${{ secrets.SSH_USER || 'root' }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          command_timeout: 30m
          script: |
            set -euo pipefail
            TIMESTAMP=$(date -u +"%Y%m%dT%H%M%SZ")

            BACKUP_DIR="${REMOTE_BACKUP_DIR:-/var/backups/github_maintenance}"
            PATHS="${REMOTE_PATHS:-/etc /var/www}"
            KEEP="${KEEP_BACKUPS:-7}"
            SRV="${SERVICES:-nginx.service}"

            echo "[REMOTE] === VPS Maintenance Started @ $TIMESTAMP ==="

            mkdir -p "$BACKUP_DIR"

            TARFILE="$BACKUP_DIR/backup-$TIMESTAMP.tar.gz"
            tar -czf "$TARFILE" $PATHS 2>/dev/null || echo "[WARN] Some files missing in backup"

            ls -1t "$BACKUP_DIR"/backup-*.tar.gz 2>/dev/null | sed -n "$((KEEP+1)),\$p" | xargs -r rm --

            for svc in $SRV; do
              if systemctl is-active --quiet "$svc"; then
                systemctl restart "$svc"
              else
                systemctl start "$svc"
              fi
            done

            IPV4=$(ip -4 addr show | grep -oP "(?<=inet\\s)\\d+(\\.\\d+){3}" | head -n1 || echo "unknown")
            echo "[REMOTE] Current IPv4: $IPV4"
