name: VPS Auto Restart (IPv4 Safe)

on:
  schedule:
    - cron: '0 */5 * * *'
  workflow_dispatch: {}

jobs:
  restart-vps:
    runs-on: ubuntu-latest

    steps:
      - name: Prepare SSH key and known_hosts (IPv4)
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -4 -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Run safe backup + restart on remote (IPv4)
        run: |
          set -euo pipefail
          PORT="${{ secrets.SSH_PORT }}"
          HOST="${{ secrets.SSH_HOST }}"
          USER="${{ secrets.SSH_USER }}"
          TARGET="$USER@$HOST"

          echo "[ACTION] target=$TARGET port=$PORT (forcing IPv4)"

          ssh -4 -i ~/.ssh/id_rsa -p "$PORT" -o StrictHostKeyChecking=yes "$TARGET" 'bash -s' <<'REMOTE_SCRIPT'
set -euo pipefail

TIMESTAMP=$(date -u +"%Y%m%dT%H%M%SZ")
BACKUP_DIR="${REMOTE_BACKUP_DIR:-/var/backups/github_maintenance}"
mkdir -p "$BACKUP_DIR"

echo "[REMOTE] Backup dir: $BACKUP_DIR"

# backup important paths
TARFILE="$BACKUP_DIR/backup-$TIMESTAMP.tar.gz"
tar -czf "$TARFILE" /etc /var/www /home/ubuntu/app/data 2>/dev/null || echo "[WARN] backup warnings"

# rotate backups
KEEP="${KEEP_BACKUPS:-7}"
ls -1t "$BACKUP_DIR"/backup-*.tar.gz 2>/dev/null | sed -n "$((KEEP+1)),\$p" | xargs -r rm --

# restart services
for svc in nginx.service myapp.service; do
  if systemctl is-active --quiet "$svc"; then
    echo "[REMOTE] Restarting $svc..."
    systemctl restart "$svc"
    systemctl is-active --quiet "$svc" && echo "[REMOTE] $svc is running âœ…"
  else
    echo "[REMOTE] Starting $svc..."
    systemctl start "$svc"
  fi
done

echo "[REMOTE] IPv4: $(ip -4 addr show | grep -oP "(?<=inet\\s)\\d+(\\.\\d+){3}" | head -n1)"
echo "[REMOTE] Completed at $TIMESTAMP"
REMOTE_SCRIPT
